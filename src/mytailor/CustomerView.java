/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mytailor;

import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class CustomerView extends javax.swing.JFrame {

    /**
     * Creates new form CustomerView
     */
    public CustomerView() {
        initComponents();
        showInfo(orderView);
       
    }
            
    
    
    
    
    ///////////////// Disabling Delete button
    public void disableButton(){
    
    deleteButton.setVisible(false);
    }
    
    
    
    
    
    
    
    
    /////////////////Searching//////////////////
    public void searchByOrderNo( JTable info){
    
          DBconnection db=new DBconnection(); 
   
       String q="select * from cust_info where cust_name= ?  OR ordno='"+txtSearch.getText()+"'" ;
               //'"+txt.getText()+"' ";
    try{
            PreparedStatement pst = db.conn.prepareStatement(q);
            pst.setString(1,txtSearch.getText());
            ResultSet rs = pst.executeQuery();
              DefaultTableModel model = new DefaultTableModel();
          String[] columnNames = {"ID", "Name", "Address", "Country","Contact"};
          model.setColumnIdentifiers(columnNames);
          info.setModel(model);
        String id = "";
        String name = "";
        String add = "";
        String cous = "";
         String contact = "";
   
         
            
           while(rs.next()) {
                id = rs.getString("ordno");
                name = rs.getString("cust_name");
                add = rs.getString("cust_add");
                cous = rs.getString("countryCode");
                contact = rs.getString("cust_contact");
                model.addRow(new Object[]{id,name, add, cous,contact});

            }
    }catch(SQLException e){}
    
    }
    ////////////SEARCH BY NAME
     public void searchByName( JTable info){
    
          DBconnection db=new DBconnection(); 
   
       String q="select * from cust_info where cust_name= ? "; 
    try{
            PreparedStatement pst = db.conn.prepareStatement(q);
            pst.setString(1,txtSearch.getText());
            ResultSet rs = pst.executeQuery();
              DefaultTableModel model = new DefaultTableModel();
          String[] columnNames = {"ID", "Name", "Address", "Country","Contact"};
          model.setColumnIdentifiers(columnNames);
          info.setModel(model);
        String id = "";
        String name = "";
        String add = "";
        String cous = "";
         String contact = "";
   
         
            
           while(rs.next()) {
                id = rs.getString("ordno");
                name = rs.getString("cust_name");
                add = rs.getString("cust_add");
                cous = rs.getString("countryCode");
                contact = rs.getString("cust_contact");
                model.addRow(new Object[]{id,name, add, cous,contact});

    }
    }catch(SQLException e){}
             
    
  }
    
    
    
   ///Fetch info for Displaying On Payment form
    public void showInfo( JTable info){
    try{
            DBconnection db=new DBconnection(); 
            String q="select * from cust_info ";
            Statement st=db.conn.createStatement();
            ResultSet rs=st.executeQuery(q);
          // info.setModel(DbUtils.resultSetToTableModel(rs));
          ///////////////////////\\\\\\\\\\\\\\\\\\\\\\\\
           DefaultTableModel model = new DefaultTableModel();
          String[] columnNames = {"ID", "Name", "Address", "Country","Contact"};
          model.setColumnIdentifiers(columnNames);
          info.setModel(model);
        String id = "";
        String name = "";
        String add = "";
        String cous = "";
         String contact = "";
   
         
            
           while(rs.next()) {
                id = rs.getString("ordno");
                name = rs.getString("cust_name");
                add = rs.getString("cust_add");
                cous = rs.getString("countryCode");
                contact = rs.getString("cust_contact");
                model.addRow(new Object[]{id,name, add, cous,contact});
                
            
            
            }
         
    }catch(SQLException e){}
}
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderView = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer List");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        orderView.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        orderView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderView);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fashion/designing/system/image/search.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 102, 0));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setText("Customer List");
        jLabel1.setOpaque(true);

        viewButton1.setText("Home");
        viewButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewButton1)
                .addGap(18, 18, 18)
                .addComponent(viewButton)
                .addGap(30, 30, 30)
                .addComponent(deleteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(viewButton)
                    .addComponent(viewButton1))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        searchByName(orderView);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyTyped

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
       
        
            searchByOrderNo(orderView);                 // TODO add your handling code here:
        
    }//GEN-LAST:event_searchButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel) orderView.getModel();
       
             
            int SelectedRowIndex = orderView.getSelectedRow();      
            String rowIndex=(model.getValueAt(SelectedRowIndex, 0).toString());
            System.out.println("This is selected row: "+rowIndex);
            CustomerProfile cf=new CustomerProfile();
            cf.showMe(rowIndex);
            cf.setVisible(true);
        
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        DBconnection db=new DBconnection();

        DefaultTableModel model = (DefaultTableModel) orderView.getModel();

            // get selected row index

         try{

             int SelectedRowIndex = orderView.getSelectedRow();
                      
                String rj=(model.getValueAt(SelectedRowIndex, 0).toString());
                Statement st=db.conn.createStatement();
                System.out.println(rj);
               JDialog.setDefaultLookAndFeelDecorated(true);
               int response = JOptionPane.showConfirmDialog(null, "Do you want to continue ?", "Confirm",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
               switch (response) {
                case JOptionPane.NO_OPTION:
                System.out.println("No button clicked");
                break;
                case JOptionPane.YES_OPTION:
                int a= st.executeUpdate("Delete  from cust_info where ordno='"+rj+"'");
                int b= st.executeUpdate("Delete  from measurement where ordno='"+rj+"'");
                if(a>0 && b>0){
                    model.removeRow(SelectedRowIndex);
                    System.out.println("Deleted!");
                }
                break;

                case JOptionPane.CLOSED_OPTION:
                System.out.println("JOptionPane closed");
                break;
                default:
                break;
            }

            /////

        }catch(HeadlessException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"Select a record !");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void orderViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderViewMouseClicked
    
            
    }//GEN-LAST:event_orderViewMouseClicked

    private void viewButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButton1ActionPerformed
        // TODO add your handling code here:
        HOME hm=new HOME();
        hm.setVisible(true);
            dispose();
    }//GEN-LAST:event_viewButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderView;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JButton viewButton;
    private javax.swing.JButton viewButton1;
    // End of variables declaration//GEN-END:variables
}
